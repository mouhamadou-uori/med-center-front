üöÄ Guide de D√©marrage - Backend MedCenter
üìã Pr√©requis
Logiciels requis
Java 17 ou sup√©rieur
Maven 3.8+
MySQL 8.0+
Git
Docker (optionnel pour Orthanc)
IDE (IntelliJ IDEA, Eclipse, VS Code)
V√©rification des versions
java --version
mvn --version
mysql --version
git --version
 √âtape 1 : Clonage du Repository
 # Cloner le repository depuis GitHub
git clone https://github.com/votre-organisation/medcenter.git

# Naviguer dans le dossier
cd medcenter

# V√©rifier la branche
git branch -a
git checkout main  # ou develop selon votre workflow
üóÑÔ∏è √âtape 2 : Configuration de la Base de Donn√©es MySQL
2.1 Installation MySQL (si n√©cessaire)
Ubuntu/Debian :
sudo apt update
sudo apt install mysql-server
sudo systemctl start mysql
sudo systemctl enable mysql
macOS (avec Homebrew) :
brew install mysql
brew services start mysql
Windows :

T√©l√©charger MySQL Installer depuis le site officiel
Suivre l'assistant d'installation
2.2 Configuration de la base de donn√©es
# Se connecter √† MySQL
mysql -u root -p

# Cr√©er la base de donn√©es
CREATE DATABASE med_center CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;

# Cr√©er l'utilisateur (optionnel, utiliser celui du projet)
CREATE USER 'wally'@'localhost' IDENTIFIED BY 'passer';
GRANT ALL PRIVILEGES ON med_center.* TO 'wally'@'localhost';
FLUSH PRIVILEGES;

# V√©rifier la cr√©ation
SHOW DATABASES;
EXIT;
2.3 Importer le sch√©ma de base
# Si des fichiers SQL existent dans le projet
mysql -u wally -p med_center < src/main/resources/schema.sql
mysql -u wally -p med_center < src/main/resources/data.sql

# Ou utiliser les fichiers de test
mysql -u wally -p med_center < src/main/resources/donnees-test-medical.sql
üñºÔ∏è √âtape 3 : Configuration du Serveur DICOM Orthanc
3.1 Installation avec Docker (Recommand√©)
# Cr√©er un dossier pour Orthanc
mkdir orthanc-data

# Lancer Orthanc avec Docker
docker run -d \
  --name orthanc \
  -p 8042:8042 \
  -p 4242:4242 \
  -v $(pwd)/orthanc-data:/var/lib/orthanc/db \
  jodogne/orthanc
3.2 V√©rification d'Orthanc
# V√©rifier que le conteneur fonctionne
docker ps

# Acc√©der √† l'interface web
# Ouvrir http://localhost:8042 dans le navigateur
# Login par d√©faut : orthanc / orthanc

3.3 Configuration Orthanc (optionnel)
Cr√©er un fichier orthanc.json :

{
  "HttpPort" : 8042,
  "DicomPort" : 4242,
  "RemoteAccessAllowed" : true,
  "AuthenticationEnabled" : false,
  "RegisteredUsers" : {},
  "DicomModalities" : {},
  "OrthancPeers" : {}
}

‚öôÔ∏è √âtape 4 : Configuration de l'Application
4.1 Fichier application.properties
V√©rifier/modifier application.properties 
# Application
spring.application.name=med_center
server.port=9000

# Base de donn√©es MySQL
spring.datasource.url=jdbc:mysql://localhost:3306/med_center
spring.datasource.username=wally
spring.datasource.password=passer
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA/Hibernate
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.defer-datasource-initialization=false
spring.sql.init.mode=never

# Orthanc Configuration
orthanc.server.url=http://localhost:8042

# JWT Configuration
spring.security.oauth2.resourceserver.jwt.public-key-location=classpath:public.pem

# Email Configuration (Resend)
resend.api.key=votre-cle-api-resend
resend.from.email=MedCenter <no-reply@medcenter.sn>

# Logging
logging.level.root=error
logging.level.sn.xyz=info
4.2 Cl√©s JWT
V√©rifier que les fichiers public.pem et private.pem existent dans resources :
# Lister les fichiers de ressources
ls -la src/main/resources/

# Les fichiers suivants doivent √™tre pr√©sents :
# - public.pem
# - private.pem
# - application.properties
# - schema.sql (si applicable)
# - data.sql (si applicable)
üîß √âtape 5 : Build et Compilation
5.1 Installation des d√©pendances
# Nettoyer et installer les d√©pendances
mvn clean install

# Ou sans les tests (plus rapide)
mvn clean install -DskipTests
5.2 V√©rification des d√©pendances
# Afficher l'arbre des d√©pendances
mvn dependency:tree

# V√©rifier les conflits potentiels
mvn dependency:analyze
üöÄ √âtape 6 : Lancement de l'Application
6.1 D√©marrage via Maven
# Lancer l'application
mvn spring-boot:run

# Ou avec un profil sp√©cifique
mvn spring-boot:run -Dspring-boot.run.profiles=dev
6.2 D√©marrage via JAR
# Compiler le JAR
mvn clean package -DskipTests

# Lancer le JAR
java -jar target/medcenter-0.0.1-SNAPSHOT.jar

# Avec options JVM
java -Xmx1024m -jar target/medcenter-0.0.1-SNAPSHOT.jar
6.3 V√©rification du d√©marrage
# V√©rifier que l'application fonctionne
curl http://localhost:9000/api/auth/test

# Ou dans le navigateur
# http://localhost:9000/api/orthanc/patients
üîç √âtape 7 : Tests et V√©rification
7.1 Tests de connectivit√©
# Test de la base de donn√©es
curl http://localhost:9000/actuator/health

# Test d'Orthanc
curl http://localhost:8042/system

# Test de l'API
curl http://localhost:9000/api/orthanc/patients
7.2 Test d'authentification
# Test de login (remplacer par des vraies donn√©es)
curl -X POST http://localhost:9000/api/auth/login \
  -H "Content-Type: application/json" \
  -d '{"username":"admin","password":"password"}'
  